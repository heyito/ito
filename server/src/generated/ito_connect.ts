// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts"
// @generated from file ito.proto (package ito, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { AudioChunk, HealthCheckRequest, HealthCheckResponse, TranscribeFileRequest, TranscriptionResponse } from "./ito_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service ito.ItoService
 */
export const ItoService = {
  typeName: "ito.ItoService",
  methods: {
    /**
     * Simple authenticated health check
     *
     * @generated from rpc ito.ItoService.HealthCheck
     */
    healthCheck: {
      name: "HealthCheck",
      I: HealthCheckRequest,
      O: HealthCheckResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Method 1: Sends a whole audio file and gets a single response.
     * Good for simple, non-real-time use cases.
     *
     * @generated from rpc ito.ItoService.TranscribeFile
     */
    transcribeFile: {
      name: "TranscribeFile",
      I: TranscribeFileRequest,
      O: TranscriptionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Method 2: Streams audio chunks from the client and gets a single response.
     * This is the ideal method for dictation to reduce latency and memory usage.
     *
     * @generated from rpc ito.ItoService.TranscribeStream
     */
    transcribeStream: {
      name: "TranscribeStream",
      I: AudioChunk,
      O: TranscriptionResponse,
      kind: MethodKind.ClientStreaming,
    },
  }
} as const;

